import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  HoverCard,
  HoverCardContent,
  HoverCardTrigger,
} from "@/components/ui/hover-card";
import { Separator } from "@/components/ui/separator";
import { CreditCode } from "@/types/credit-code";
import { ColumnDef } from "@tanstack/react-table";

export const creditCodesColumns: ColumnDef<CreditCode>[] = [
  {
    id: "select",
    header: ({ table }) => (
      <Checkbox
        checked={
          table.getIsAllPageRowsSelected() ||
          (table.getIsSomePageRowsSelected() && "indeterminate")
        }
        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}
        aria-label='Select all'
      />
    ),
    cell: ({ row }) => (
      <Checkbox
        checked={row.getIsSelected()}
        onCheckedChange={(value) => row.toggleSelected(!!value)}
        aria-label='Select row'
      />
    ),
    enableSorting: false,
    enableHiding: false,
  },

  {
    accessorKey: "status",
    header: "Status",
    cell: ({ row }) => {
      const code = row.original;

      return (
        <HoverCard>
          <HoverCardTrigger asChild>
            <Button className='p-0' variant='link'>
              @{code.status}
            </Button>
          </HoverCardTrigger>
          <HoverCardContent className='flex flex-col items-center gap-2 border-2 shadow-md w-fit border-secondary shadow-primary'>
            <div className='flex items-center justify-between w-full gap-2'>
              <span>Generated By </span>
              <Badge>{code.generator?.email ?? "Teacher"}</Badge>
              <span>At </span>
              <Badge>{new Date(code.generatedAt).toLocaleString()}</Badge>
            </div>
            <Separator />
            {code.soldAt && (
              <div className='flex items-center justify-between w-full gap-2'>
                <span>Sold By </span>
                <Badge>{code.seller?.email ?? "Teacher"}</Badge>
                <span>At </span>
                <Badge>{new Date(code.soldAt).toLocaleString()}</Badge>
              </div>
            )}
            <Separator />
            {code.redeemer && (
              <div className='flex items-center justify-between w-full gap-2'>
                <span>Redeemed By </span>
                <Badge>{code.redeemer.email}</Badge>
                <span>At </span>
                <Badge>
                  {new Date(code.redeemer.redeemedAt).toLocaleString()}
                </Badge>
              </div>
            )}
          </HoverCardContent>
        </HoverCard>
      );
    },
  },
  {
    accessorKey: "code",
    header: "Code",
  },
  {
    accessorKey: "value",
    header: "Value",
  },
];
